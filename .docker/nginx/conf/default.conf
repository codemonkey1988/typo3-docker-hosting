server {
    listen 80;
    listen [::]:80;
    server_name docker-hosting.localhost;

    # Disable all access logs for port 80 - It will just redirect to 443 every time.
    access_log off;
    log_not_found off;
    server_tokens off;

    # Allow this location for Let's Encrypt certbot to renew/obtain certificate.
    location /.well-known/acme-challenge/ {
        root /app/certbot;
    }

    # Redirect to https
    location / {
        return 301 https://docker-hosting.localhost$request_uri;
    }
}

server {
    # Enable http2 module.
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Set the domains this server should listen to.
    server_name docker-hosting.localhost;

    # Disable logging of error for not found files - can be enabled if needed.
    log_not_found off;
    # Security: Do not send version information about nginx and php.
    server_tokens off;

    # Let's Encrypt configuration.
    # See https://raw.githubusercontent.com/wmnnd/nginx-certbot/master/init-letsencrypt.sh
    ssl_certificate /etc/letsencrypt/live/docker-hosting.localhost/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/docker-hosting.localhost/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    ssl_session_tickets off;
    ssl_buffer_size 4k;

    # Remove trailing /
    # TYPO3 v9 do not send a trailling / by default. To be safe, do a redirect of a trailling /
    # is set and for some reason no canonical url is set.
    if (!-d $request_filename) {
        rewrite ^/(.*)/$ /$1 permanent;
    }

    # Activate Brotli for static files by mime type.
    brotli on;
    brotli_static on;
    brotli_comp_level 4;
    brotli_types text/plain text/css application/javascript application/json image/svg+xml application/xml+rss;

    # Activate gzip as fallback
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/javascript application/json image/svg+xml application/xml+rss;
    gzip_disable "MSIE [1-6]\.";

    root /app/public;
    index index.php;

    client_max_body_size 100M;
    client_body_buffer_size 128k;

    # See https://github.com/qbus-agentur/nginx_cache
    error_page 405 = @purge;
    if ($request_method = PURGE) {
        return 405;
    }

    # Set caching cofiguration for static files.
    location ~* \.(jpe?g|png|gif|ico|woff2?|ttf|otf|svg|webp|js|css)$ {
        # Remove etag header - The calculation of etag is done for every request
        # and not needed because TYPO3 adds a version string to css and js files.
        etag off;
        # Set expire date to 1 year for all static files.
        # This shouldn't be any problem, because when css or js changes, the version string changes
        # If images changed, the processed images names changes, too.
        expires 1y;
        add_header Cache-Control "public";
        # Remove Last-Modified header - Not needed because of version strings.
        add_header Last-Modified  "";

        # Write asset into proxy cache after the first time its been requested.
        proxy_cache_min_uses 1;
        proxy_cache_methods GET HEAD;

        # Disable access log for static assets - Enable it if needed.
        access_log off;

        # Rewrite some paths when using versionNumberInFilename = embed
        if (!-e $request_filename) {
            rewrite ^/(.+)\.(\d+)\.(js|css|png|jpe?g|gif|gzip)$ /$1.$3 last;
        }
    }
    # Deny access to all files or folders that start with a dot.
    location ~ /\. {
        deny all;
    }
    # Deny access to _recycler_ folder inside fileadmin.
    location ~* ^/fileadmin/(.*/)?_recycler_/ {
        deny all;
    }
    # Stop checking for further rules of path of requested resources start with
    # - /fileadmin/
    # - /typo3conf/
    # - /typo3temp/
    # - /favicon.ico
    # URLs to this folders always should request static files that exist.
    location ~* ^/(fileadmin/|typo3conf/|typo3temp/|favicon\.ico) {
    }
    # Dufault hanling if URL could not be processed by now.
    location / {
        # Use realtive paths for redirects
        absolute_redirect off;
        # First, try to call the current URL, is it fails, delegate the request to index.php.
        try_files $uri $uri/ /index.php$is_args$args;
    }
    # Default handling for all frontend PHP requests.
    location = /index.php {
        try_files $uri =404;

        # Delegate request to PHP container container with fpm.
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /app/public$fastcgi_script_name;
        include        fastcgi_params;

        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout 1200;

        # Add FastCGI cache for PHP - this requires the extension qbus-agentur/nginx_cache
        # to handle cache invalidation.
        # See https://github.com/qbus-agentur/nginx_cache
        fastcgi_cache TYPO3;
        fastcgi_cache_key $scheme://$host$request_uri;
        fastcgi_cache_methods GET HEAD;
        fastcgi_cache_bypass $cookie_be_typo_user $args;
        fastcgi_cache_valid 0;
        fastcgi_ignore_headers "Expires" "Cache-Control" "Vary";
        add_header X-Cache  $upstream_cache_status;

        # Add security headers
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Feature-Policy "fullscreen 'self'";
        add_header Content-Security-Policy "default-src 'self'" always;

        # Enable http2 push for resources that are initiated by this request.
        http2_push_preload on;
    }
    # Location directive for handling PHP backend requests.
    # See comments from frontend requests.
    location ~* ^/typo3/(index|install)\.php$ {
        try_files $uri =404;

        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /app/public$fastcgi_script_name;
        include        fastcgi_params;

        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout 1200;

        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer" always;
    }
    # Deny access to all other php files (just index.php, typoe/index.php and typo3/install.php are allowed)
    location ~* \.php$ {
        deny all;
    }
    # Handle purge requests that are send by qbus-agentur/nginx_cache to invalidate FastCGI cache.
    location @purge {
        allow 127.0.0.1;
        allow ::1;
        allow 192.168.0.0/24;
        allow 10.19.0.0/24;
        deny all;

        set $purge_path "/var/nginx/cache/TYPO3";
        set $purge_levels "1:2";
        set $purge_cache_key "$scheme://$host$request_uri";
        if ($request_uri = /*) {
            set $purge_all 1;
        }

        perl NginxCache::Purge::handler;
    }
}